buildscript {
    ext {
        springBootVersion = '2.3.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "com.moowork.node" version "1.3.1"
    id 'io.franzbecker.gradle-lombok' version '4.0.0'
    id 'jacoco'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'org.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.9

task buildFront(type: YarnTask) {
    args = ['build']
}

yarn_install.dependsOn(yarn_cache_clean)
buildFront.dependsOn(yarn_install)
processResources.dependsOn(buildFront)

repositories {
    mavenCentral()
}

node {
    version = '14.7.0'
    npmVersion = '6.14.7'
    yarnVersion = '1.22.4'
    download = true
}

test {
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

dependencies {
    annotationProcessor('org.projectlombok:lombok')
    annotationProcessor('org.mapstruct:mapstruct-processor:1.3.1.Final')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile('org.postgresql:postgresql')
    compile('org.projectlombok:lombok')
    compile('org.springframework.session:spring-session-jdbc')
    compile('org.flywaydb:flyway-core')
    compile('org.mapstruct:mapstruct:1.3.1.Final')
    compile('org.hibernate.validator:hibernate-validator:6.1.5.Final')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}
